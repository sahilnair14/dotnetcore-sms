name: Build and Deploy to IIS on Azure VM

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x'  # Specify your .NET version

    - name: Restore dependencies
      run: dotnet restore

    - name: Build the project
      run: dotnet build --configuration Release

    - name: Publish the project
      run: dotnet publish --configuration Release --output ./publish

    - name: Create artifact.zip
      run: |
        Compress-Archive -Path ./publish/* -DestinationPath ./artifact.zip

    - name: Upload artifact for deployment
      uses: actions/upload-artifact@v3
      with:
        name: artifact
        path: ./artifact.zip

  deploy:
    runs-on: windows-latest
    needs: build

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: artifact
        path: ./artifact  # Downloads to ./artifact directory

    - name: Install Web Deploy
      run: choco install webdeploy

    - name: Deploy to IIS on Azure VM
      shell: pwsh
      run: |
        $msdeployPath = "C:\Program Files (x86)\IIS\Microsoft Web Deploy V3\msdeploy.exe"
        $artifactPath = "${{ github.workspace }}\artifact\artifact.zip"  # Path to the downloaded artifact

        $username = "sahil"
        $password = "Nair1234567890"  # Replace with actual password
        $destContentPath = "Test"
        $serverUrl = "https://20.5.240.49:8172/msdeploy.axd

        Write-Output "Username: $username"
        Write-Output "Artifact Path: $artifactPath"

        if (Test-Path $msdeployPath) {
          if (Test-Path $artifactPath) {
            & $msdeployPath `
              -verb:sync `
              -source:package=$artifactPath `
              -dest:contentPath=$destContentPath,computerName=$serverUrl,username=$username,password=$password,authType=Basic `
              -allowUntrusted `
              -verbose
          } else {
            Write-Error "Artifact not found at $artifactPath. Please check the download path and verify the artifact name."
          }
        } else {
          Write-Error "msdeploy.exe not found at $msdeployPath"
        }
