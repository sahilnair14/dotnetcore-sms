name: Build and Deploy to IIS on Azure VM

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x'  # Specify your .NET version

    - name: Restore dependencies
      run: dotnet restore

    - name: Build the project
      run: dotnet build --configuration Release

    - name: Publish the project
      run: dotnet publish --configuration Release --output ./publish

    - name: Create artifact directory
      run: |
        New-Item -ItemType Directory -Path ./artifact
        Compress-Archive -Path ./publish/* -DestinationPath ./artifact/artifact.zip

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: artifact
        path: ./artifact/artifact.zip

  deploy:
    runs-on: windows-latest
    needs: build

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: artifact
        path: ./artifact  # Downloads to ./artifact directory

    - name: Install Web Deploy
      run: choco install webdeploy 

    - name: Deploy to IIS on Azure VM
      shell: pwsh
      run: |
        $msdeployPath = "C:\Program Files (x86)\IIS\Microsoft Web Deploy V3\msdeploy.exe"
        $artifactPath = "$env:GITHUB_WORKSPACE\artifact\artifact.zip"
        Write-Output "Username: sahil"
        Write-Output "Artifact Path: $artifactPath"
        
        # Check if msdeploy exists
        if (Test-Path $msdeployPath) {
          # Check if the artifact exists
          if (Test-Path $artifactPath) {
            # Define the msdeploy arguments as per official example
            $msdeployArgs = @(
              "-source:package=$artifactPath"
              "-dest:auto"
              "-dest:computername=https://vm01:8172/msdeploy.axd"
              "-dest:username=sahil"
              "-dest:password=Nair1234567890"
              "-dest:authType=Basic"
              "-dest:allowUntrusted"
              "-verb:sync"
              "-retryAttempts=2"
              "-disableLink:AppPoolExtension"
              "-disableLink:ContentExtension"
              "-disableLink:CertificateExtension"
            )
            & "$msdeployPath" $msdeployArgs
          } else {
            Write-Error "Artifact not found at $artifactPath. Please check the download path and verify the artifact name."
          }
        } else {
          Write-Error "msdeploy.exe not found at $msdeployPath"
        }
